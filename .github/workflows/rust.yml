name: Rust

on:
  push:
    branches: ["main"]
  pull_request:

env:
  CARGO_TERM_COLOR: always

permissions: {}

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Install Rust toolchain
        uses: moonrepo/setup-rust@ede6de059f8046a5e236c94046823e2af11ca670 # v1.2.2

      - name: Run cargo check
        run: cargo check --all-targets --all-features

  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Install Rust toolchain
        uses: moonrepo/setup-rust@ede6de059f8046a5e236c94046823e2af11ca670 # v1.2.2
        with:
          bins: cargo-nextest,just
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Download the Prophet Stan model since an example requires it.
      - name: Download Prophet Stan model
        run: just download-prophet-stan-model

      - name: Run cargo nextest
        run: just test-all
      - name: Run doc tests
        run: just doctest

  bench:
    name: Run benchmarks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Install Rust toolchain
        uses: moonrepo/setup-rust@ede6de059f8046a5e236c94046823e2af11ca670 # v1.2.2
        with:
          bins: cargo-nextest,just
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run benchmarks in test mode
        run: just test-bench

  test-book:
    name: Test Book
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Install Rust toolchain
        uses: moonrepo/setup-rust@ede6de059f8046a5e236c94046823e2af11ca670 # v1.2.2
        with:
          bins: cargo-nextest,just,mdbook
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # The book tests require the augurs library to be built. In CI, we cache the result
      # of the build so that we don't have to rebuild it every time, but this can result
      # in multiple 'augurs' rlibs being present in the book's target directory. This
      # causes the book tests to fail because they don't know which to link against.
      # Remove the old cached augurs libraries before rebuilding so that there is
      # only one augurs library present.
      - name: Remove old cached augurs libraries
        run: rm -rf target/debug/deps/libaugurs*
      - name: Run cargo build
        run: cargo build
      - name: Run book tests
        run: just book/test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Install Rust toolchain
        uses: moonrepo/setup-rust@ede6de059f8046a5e236c94046823e2af11ca670 # v1.2.2
        with:
          components: rustfmt

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Install Rust toolchain
        uses: moonrepo/setup-rust@ede6de059f8046a5e236c94046823e2af11ca670 # v1.2.2
        with:
          components: clippy

      - name: Run cargo clippy
        run: cargo clippy --all-features --all-targets -- -D warnings
